{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/searchbox.js","Components/scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACxB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCyBLK,EA9BE,SAAC,GAEX,IADHC,EACE,EADFA,OAGA,OACI,oCACIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAS,cACL,EADK,CAILR,GACIK,EAAOG,GAAGR,GAEdF,KACIO,EAAOG,GAAGV,KAEdC,MACIM,EAAOG,GAAGT,OATVS,UCGTC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACC,uBAEAW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCJI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACH,uCAEJG,KAAKX,MAAMK,a,GAhBCQ,aCgDZC,E,kDAzCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAdzC,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJR,E,gEAQO,IAAD,OACfyB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAS,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAOhC,IAAD,OACCC,EAAiBb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAAC,GAC5C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAEpE,OAAQhB,KAAKJ,MAAMlB,OAAOwC,OAGlB,sBAAK5C,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WAPhC,6C,GAxBWX,aCIJiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5c022e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?100x100`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({\r\n    robots\r\n}) => {\r\n\r\n    return ( \r\n        <div> {\r\n            robots.map((user, i) => {\r\n                return ( <\r\n                    Card key = {\r\n                        i\r\n                    }\r\n                    id = {\r\n                        robots[i].id\r\n                    }\r\n                    name = {\r\n                        robots[i].name\r\n                    }\r\n                    email = {\r\n                        robots[i].email\r\n                    }\r\n                    />\r\n                );\r\n\r\n            })\r\n        } \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n         <input \r\n         \r\n         type='search' \r\n         placeholder='search robots'\r\n         onChange={searchChange}\r\n         />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>ooops</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n    \r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/searchbox';\r\nimport Scroll from '../Components/scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry'\r\n\r\n\r\n\r\nclass App  extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=> {this.setState({robots: users})})\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return !this.state.robots.length ?\r\n        <h1>Loading</h1>:\r\n             (\r\n                <div className='tc'>\r\n                  <h1>Robofriends</h1>\r\n                  <SearchBox searchChange={this.onSearchChange} />\r\n                  <Scroll>\r\n                      <ErrorBoundry>\r\n                      <CardList robots={filteredRobots}/>\r\n                      </ErrorBoundry>                     \r\n                  </Scroll>\r\n\r\n                </div>\r\n        \r\n            )       \r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}